[배운 것]
스택을 구현하고 입력을 받아 명령을 처리하는 알고리즘 문제.
(구현한 코드는 저 아래에...)

1. 입력을 받고 그와 이름이 같은 함수를 찾아야 함
->  for 변수 in [함수이름, 함수이름, 함수이름]:  # 함수를 만들고 리스트에 담아, for 문으로 변수에 하나씩 담아 오면
       if 입력 == 변수.__name__ :              # 입력과 이름이 같은지 확인하고
           변수()                              # 변수에 담아온 상태 그대로 함수 실행 가능. 변수()

2. 1의 생각을 따라
-> 클래스를 만들지 않고 스택 관련 함수만 만듦.
     이유 : 클래스를 만들면 입력과 같은 이름의 함수 실행이 불가능해 보임.
            불가능: 객체.함수를담은변수()
              가능: 객체.함수()
-> 클래스인 스택의 멤버변수 self.head를 사용하지 못함. 함수 구현이 다소 불편함
-> 파이썬 시간 초과. 파이파이 통과.


3. 그러면 이렇게 할 수도 있었겠다(추측)
-> 스택 클래스를 만들고
   그 안에 이런 함수를 만들면 되지 않을까
                   : 매개변수로 input(입력)을 받아 그와 이름이 같은 함수를 찾아 실행하는 함수
                   
->    def 함수찾기 (입력):
           for 함수 in [스택 클래스의 함수들. self.push, self.pop, self.size 등등]:    
                 if 입력[0] == 함수.__name__:     #명령과 이름이 같은 함수 실행
                     if len(입력) == 1:
                         함수()
                         break 
                     else:
                         함수(int(입력[1]))



->
이 방법이 문제 출제 의도에 좀더 부합할 것 같은데..
일단 통과는 했으니 다음 문제로 넘어가자.
기록은 해 뒀으니 나중에 참고할 수 있겠지.........ㅎㅎ


4. 2의 방법 사용. 제출 시 통과는 한 코드
________________________________________________________________________________________
command_list = []   #명령 모음

result_list = []    #출력할 result 모음

stack_list = []     #스택

#명령을 수행할 함수
def push(num):
    stack_list.append(num)
    
def pop():
    if len(stack_list) != 0:
        result_list.append(stack_list[-1])
        del stack_list[-1]    
    else:
        result_list.append(-1)
    
def size():
    result_list.append(len(stack_list))
    
def empty():
    if len(stack_list) == 0:
        result_list.append(1)
    else:
        result_list.append(0)

def top():
    if len(stack_list) == 0:
        result_list.append(-1)
    else:
        result_list.append(stack_list[-1])

command_list = [push,pop,size,empty,top]   #명령 모음에 함수 이름 넣기


for i in range(int(input())):   #처음 input 값 만큼 명령 받기
    inp = input().split()
    
    for command in command_list:    
        if inp[0] == command.__name__:     #명령과 이름이 같은 함수 실행
            if len(inp) == 1:
                command()
                break 
            else:
                command(int(inp[1]))


for i in result_list:   #결과 출력
    print(i)
________________________________________________________________________________________    
    

백준 문제 https://www.acmicpc.net/problem/10828


[느낀 것]
한 문제를 너무 오래 잡고 있는 듯 하다.
구현에 필요한 조각들은 구글링을 해서라도
결국 풀리긴 하는데
...지친다...

그런데 문제 풀기 시작한 지 얼마 되지 않은 상태라
안 풀린다고 답을 찾긴 꺼려지고
문제 풀이에 익숙해지면 계속 풀 것이냐 힌트를 찾아볼 것이냐 선택하는
감이 좀 생기려나
